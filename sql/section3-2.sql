/*
This query finds the weather station and the year-month time when it had the 
biggest monthly average temperature variance since 2012. 
Additionally, it pairs up the weather station's monthly average rain fall and
wind speed.

**Solution Approach**:
- Step 1: Three CTE tables are created with unioned tables of temperature, rain and
          wind speed from 2012.

- Step 2: In the outer query, three union CTE tables are joined using record_id 
          as a join key - synthetic key consisted of station name and date in a 
          form of <station_name>_<yyyymmdd>.

- Step 3: Coupled with the above joining, the dataset is grouped by station name,
          state, year and month to calculate the monthly average values of the
          temperature variance, rain fall and wind speed.

- Step 4: Lastly, the dataset is ordered by the monthly average
          temperature variance in descending order, and the row is limited to 1
          to display the weather station and the year-month time that had the
          biggested monthly average temperature variance, alongside monthly average
          of the rain fall and wind speed.

**Alternative Approach**:
The aggregated dataset can be leveraged for this problem, which will result the
same station record, yet at much better query performance.
    SELECT
        STATION_NAME,
        STATE,
        YEAR,
        MONTH,
        AVG_VAR_TEMPERATURE,
        AVG_RAIN_FALL,
        AVG_10M_WIND_SPEED
    FROM AGGREGATED.MONTHLY_AVERAGE
    WHERE AVG_VAR_TEMPERATURE IS NOT NULL
    ORDER BY AVG_VAR_TEMPERATURE DESC
    LIMIT 1;

*****
Please note that the answer may be differ in year 2023 depending on the version of
BOM dataset as the dataset gets updated daily, creating difference in the record numbers.
*****
*/


WITH TEMP_UNION AS (
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2023 
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2022
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2021
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2020
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2019
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2018
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2017
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2016
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2015
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2014
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2013
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, VARIANCE_TEMPERATURE FROM TEMPERATURE.TEMPERATURE_2012
),

RAIN_UNION AS (
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2023 
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2022
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2021
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2020
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2019
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2018
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2017
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2016
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2015
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2014
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2013
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, RAIN FROM RAIN.RAIN_2012
),

WIND_SPEED_UNION AS (
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2023 
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2022
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2021
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2020
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2019
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2018
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2017
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2016
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2015
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2014
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2013
    UNION
    SELECT RECORD_ID, STATION_NAME, STATE, DATE, AVERAGE_10M_WIND_SPEED FROM WIND_SPEED.WIND_SPEED_2012
)

SELECT
    TEMP_UNION.STATION_NAME,
    TEMP_UNION.STATE,
    EXTRACT(YEAR FROM TEMP_UNION.DATE) AS YEAR,
    EXTRACT(MONTH FROM TEMP_UNION.DATE) AS MONTH,
    ROUND(AVG(VARIANCE_TEMPERATURE), 3) AS AVG_VAR_TEMP,
    ROUND(AVG(RAIN), 3) AS AVG_RAIN,
    ROUND(AVG(AVERAGE_10M_WIND_SPEED), 3) AS AVG_10M_WIND_SPEED
FROM TEMP_UNION
LEFT JOIN RAIN_UNION ON TEMP_UNION.RECORD_ID = RAIN_UNION.RECORD_ID
LEFT JOIN WIND_SPEED_UNION ON TEMP_UNION.RECORD_ID = WIND_SPEED_UNION.RECORD_ID
WHERE VARIANCE_TEMPERATURE IS NOT NULL
    AND TEMP_UNION.STATE IN ('VIC', 'WA')
GROUP BY TEMP_UNION.STATION_NAME, TEMP_UNION.STATE, YEAR, MONTH
ORDER BY AVG_VAR_TEMP DESC
LIMIT 1;